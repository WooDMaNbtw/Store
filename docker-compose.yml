version: "3.9"

services:
  backend:
    image: port-back:0.1
    container_name: port-back
    volumes:
      - static:/static
    env_file:
      - ./backend/portfolio/.env.local
    build:
      context: ./backend
    environment:
      - DOCKER_CONTAINER=1
    ports:
      - "8000:8000"
    depends_on:
      portfoliodb:
        condition: service_healthy
    networks:
      - portfolio

  frontend:
    image: port-front:0.1
    container_name: port-front
    build:
      context: ./frontend
    volumes:
      - frontend:/app/build
    env_file:
      - ./frontend/.env
    networks:
      - portfolio

  nginx:
    image: port-nginx:0.1
    container_name: port-nginx
    build:
      context: ./nginx
    volumes:
      - static:/static
      - frontend:/var/www/frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - portfolio

  portfoliodb:
    image: postgres:16-alpine3.18
    container_name: pgdb-portfolio
    restart: always
    env_file:
      - .env.docker
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${POSTGRES_DB_PORT}:5432
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - portfolio

  portfoliopgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4-portfolio
    restart: always
    depends_on:
      - portfoliodb
    env_file:
      - .env.docker
    ports:
      - ${PGADMIN_LISTEN_PORT}:5050
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - portfolio

volumes:
  data:
  static:
  frontend:

networks:
  portfolio: